@model Stolons.ViewModels.BillHistory.BillsViewModel
@using Stolons.Helpers
@using Stolons.Models

@if (Model.ActiveAdherentStolon.Id == Model.AdherentStolon.Id)
{
    <h2>Mes Factures et bon de commandes</h2>
}
else
{
    <h2>Factures de @Model.AdherentStolon.Adherent.Surname @Model.AdherentStolon.Adherent.Name</h2>
}

<div class="boxContainer">
    <div class="col-lg-5" style="overflow: scroll; max-height: 400px;">
        <table class="table">
            <tr>
                <th>
                    Bon de commandes
                </th>
                <th>
                    Montant
                </th>
                <th>

                </th>
            </tr>
            <tbody class="clickable-table">
                @{
                    decimal total = 0;
                    foreach (var item in Model.Bills.Where(x => x.State == BillState.Pending).OrderBy(x => x.EditionDate))
                    {
                        total += item.OrderAmount;
                        <tr data-content='@((item as ProducerBill).HtmlOrderContent)'>
                            <td>
                                <i>
                                    Le @item.EditionDate.ToString("d")
                                    n°@Html.DisplayFor(modelItem => (item as ProducerBill).OrderNumber)
                                    A @Html.DisplayFor(modelItem => item.AdherentStolon.Stolon.Label)
                                </i>
                            </td>
                            <td>
                                @item.OrderAmount.ToString("0.00")€
                                <br />
                                @switch (item.State)
                                {
                                    case BillState.Delivered:
                                        @("Livré")
                                        break;
                                    case BillState.Paid:
                                        @("Payé")
                                        break;
                                    case BillState.Pending:
                                        @("(A livrer)")
                                        break;
                                }
                            </td>
                            <td>
                                <a class="btn btn-small btn-default" href="@(Configurations.GetOrderUrl(item as ProducerBill))" target="_blank">
                                    Télécharger
                                </a>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
        <p>Total commandes : @total.ToString("0.00") €</p>
        <table class="table">
            <tr>
                <th>
                    Factures
                </th>
                <th>
                    Montant
                </th>
                <th>

                </th>
            </tr>
            <tbody class="clickable-table">
                @{
                    total = 0;
                    foreach (var item in Model.Bills.Where(x => x.State != BillState.Pending).OrderBy(x => x.EditionDate))
                    {
                        total += item.OrderAmount;
                        <tr data-content='@item.HtmlBillContent'>
                            <td>
                                <i>
                                    Le @item.EditionDate.ToString("d")
                                    n°@Html.DisplayFor(modelItem => item.BillNumber)
                                    A @Html.DisplayFor(modelItem => item.AdherentStolon.Stolon.Label)
                                </i>
                            </td>
                            <td>
                                @item.OrderAmount.ToString("0.00")€
                                <br />
                                @switch (item.State)
                                {
                                    case BillState.Delivered:
                                        @("Livré")
                                        break;
                                    case BillState.Paid:
                                        @("Payé")
                                        break;
                                    case BillState.Pending:
                                        @("(A livrer)")
                                        break;
                                }


                                @if (item.HasBeenModified)
                                {
                                    <div title="@Html.Raw(item.ModificationReason.Replace("\n\r", "<br/>"))"
                                         data-toggle="tooltip">
                                        <i class="fas fa-exclamation-triangle"></i>
                                    </div>
                                }
                            </td>
                            <td>
                                <a class="btn btn-small btn-default" href="@(Configurations.GetBillUrl(item))">
                                    Télécharger
                                </a>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
        <p>Total factures: @total.ToString("0.00") €</p>
    </div>
    <div class="col-lg-7">
        <div id="billContent">

        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        $('.clickable-table tr').click(function () {
            var content = $(this).data("content");
            $('#billContent').html(content);
        });

    });
</script>
