@model Stolons.ViewModels.ProductsManagement.ProductEditionViewModel
@using Stolons.Helpers

@{
    if (Model.IsNew)
    {
        ViewData["Title"] = "Ajouter un produit";
    }
    else
    {
        ViewData["Title"] = "Edition du produit";
    }
}

<h2>@ViewData["Title"]</h2>

<form id="productForm" asp-action="Manage" enctype="multipart/form-data" name="product-form">
    <div class="form-horizontal">
        <hr />
        <!--HIDDEN-->
        <input asp-for="Product.PicturesSerialized" hidden="hidden" />
        <input asp-for="Product.Id" hidden="hidden" />
        <input asp-for="IsNew" hidden="hidden" />
        <input asp-for="Product.ProducerId" hidden="hidden" />
        <input asp-for="Product.Familly" hidden="hidden" />
        <!-- <div asp-validation-summary="All" class="text-danger"></div> -->
        <div class="form-group">
            <label asp-for="Product.Name" class="col-md-2 control-label required"></label>
            <div class="col-md-10">
                <input asp-for="Product.Name" class="form-control" autofocus="autofocus" data-val-required="Le nom du produit est requis" data-val="true" data-val-length="Pour s'afficher correctement le nom du produit doit être de 45 caractères maximum<br />Vous pouvez utiliser la description pour complèter." data-val-length-max="45" placeholder="Nom du produit" />
                <span asp-validation-for="Product.Name" class="text-danger" />
            </div>
        </div>
        <div class="form-group">
            <label asp-for="Product.Description" class="col-md-2 control-label required"></label>
            <div class="col-md-10">
                <textarea rows="5" asp-for="Product.Description" class="form-control" placeholder="Description détaillée du produit" data-val-required="La description du produit est requise" data-val="true"></textarea>
                <span asp-validation-for="Product.Description" class="text-danger" />
            </div>
        </div>
        <div class="form-group">
            <label asp-for="Product.Labels" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                @foreach (Product.Label label in Enum.GetValues(typeof(Product.Label)))
                {
                    <span>
                        <div class="pr_label">
                            <img src="/images/labels/@(label.ToString()).jpg" />
                        </div>
                        @(EnumHelper<Product.Label>.GetDisplayValue(label))
                        @if (Model.SelectedLabels.Contains(label.ToString()))
                        {
                            <input type="checkbox" name="SelectedLabels" value="@label.ToString()" id="@label.ToString()" checked>
                        }
                        else
                        {
                            <input type="checkbox" name="SelectedLabels" value="@label.ToString()" id="@label.ToString()">
                        }
                    </span>
                    <br />
                }
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-2 control-label">Photo principale</label>
            <div class="col-md-4">
                <input id="image" type="file" class="form-control" accept="image/*">
                <input type="hidden" name="MainPictureHeavy" />
                <input type="hidden" name="MainPictureLight" />
            </div>
            <div class="col-md-4">
                @{
                    if (!Model.IsNew)
                    {

                        if (Model.Product.Pictures.Any())
                        {
                            <img id="image1Preview" src="@("\\"+Configurations.ProductsStockagePathLight + "\\" +Model.Product.Pictures[0])" class="imgPreview" />
                        }
                        else
                        {
                            <img id="image1Preview" alt="Pas d'image!" class="isa_warning" />
                        }
                    }
                    else
                    {
                        <img id="image1Preview" class="imgPreview" />
                    }
                }
            </div>
        </div>
        <div class="form-group">
            <label asp-for="Product.Storage" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <select asp-for="Product.Storage" asp-items="@(Html.GetEnumSelectList<Stolons.Models.Product.StorageType>())" class="form-control"></select>
                <span asp-validation-for="Product.Storage" class="text-danger" />
            </div>
        </div>
        <!-- just to make the current product familly accessible by js -->
        <span id="productFamilly" class="hidden">
            @if (Model.Product.Familly != null)
            {
                @(Model.Product.Familly.FamillyName)}
            else
            {
                @("Tous")
            }
        </span>
        <div id="famillySelect">
            <!-- placeholder for backbone view -->
        </div>
        <div class="form-group">
            <label asp-for="Product.Type" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <select id="SellType" asp-for="Product.Type" asp-items="Html.GetEnumSelectList<Product.SellType>()" class="form-control"></select>
                <span validation-for="Product.Type" class="text-danger" />
            </div>
        </div>
        <div id="productWeightUnit" class="form-group">
            <label asp-for="Product.ProductUnit" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <select asp-for="Product.ProductUnit" asp-items="Html.GetEnumSelectList<Product.Unit>()" class="form-control"></select>
                <span asp-validation-for="Product.ProductUnit" class="text-danger" />
            </div>
        </div>
        <div id="productQtyStep" class="form-group">
            <label asp-for="Product.QuantityStep" class="col-md-2 control-label required"></label>
            <div class="col-md-10">
                <input id="quantityStep" asp-for="Product.QuantityStep" class="form-control" min="1" data-min="Le palier de poids doit être supérieur à 0" data-val-min="Le palier de poids doit être supérieur à 0" data-val-required="Le palier de poids doit être un nombre valide" data-val-number="Le palier de poids doit être un nombre valide" />
                <span asp-validation-for="Product.QuantityStep" class="text-danger" />
            </div>
        </div>
        <fieldset>
            <legend>Prix</legend>
            <div id="hideWeightPriceContainer" class="form-group hidden">
                <label for="HideWeightPrice" asp-for="Product.HideWeightPrice" class="col-md-2 control-label"></label>
                <div class="col-md-10">
                    <input id="HideWeightPrice" asp-for="Product.HideWeightPrice" name="HideWeightPrice" type="checkbox" class="form-control" />
                    <span validation-for="Product.HideWeightPrice" class="text-danger" />
                </div>
            </div>
            <div id="weight-price-container" class="form-group">
                <label id="weightPriceLabel" asp-for="Product.WeightPrice" class="col-md-2 control-label skip"></label>
                <div class="col-md-10">
                    <input id="price" asp-for="Product.WeightPrice" class="form-control skip" data-val="false" />
                    <span id="price-error-container" class="text-danger field-validation-error hidden" data-valmsg-for="Product.WeightPrice" data-valmsg-replace="true">
                        <span id="price-error">
                            Doit être supérieur ou égal à 0.01.
                        </span>
                    </span>
                </div>
            </div>
            <div class="form-group" id="unitPriceContainer">
                <label asp-for="Product.UnitPrice" class="col-md-2 control-label required"></label>
                <div class="col-md-10">
                    <input id="unitPrice" asp-for="Product.UnitPrice" class="form-control" min="0.01" data-val-required="Le prix unitaire est requis" />
                    <span asp-validation-for="Product.UnitPrice" class="text-danger" />
                </div>
            </div>
            <div class="form-group" id="minProductWeightContainer">
                <label asp-for="Product.MinimumWeight" class="col-md-2 control-label required skip"></label>
                <div class="col-md-10">
                    <input id="minWeight" asp-for="Product.MinimumWeight" class="form-control skip" min="0.01" data-val-required="Le poids minimum est requis" />
                    <span asp-validation-for="Product.MinimumWeight" class="text-danger" />
                </div>
            </div>
	    <div id="minmax-weight-error-container" class="form-group hidden">
		<div class="col-md-2">
		    
		</div>
		<div class="col-md-10">
		    <span class="text-danger field-validation-error">
			<span id="minmax-weight-error">
			    Le poids minimum doit être inférieur au poids maximum
			</span>
		    </span>
		</div>
	    </div>
            <div class="form-group" id="maxProductWeightContainer">
                <label asp-for="Product.MaximumWeight" class="col-md-2 control-label required"></label>
                <div class="col-md-10">
                    <input id="maxWeight" asp-for="Product.MaximumWeight" class="form-control" min="0.01" data-val-required="Le prix unitaire est requis" />
                    <span asp-validation-for="Product.MaximumWeight" class="text-danger" />
                </div>
            </div>
	    <div class="form-group" id="meanPriceContainer">
                <label class="col-md-2 control-label">Prix moyen</label>
                <div class="col-md-10">
                    <input id="meanPrice" readonly />
                </div>
            </div>
            <div class="form-group" id="minPrice">
                <label asp-for="Product.MinimumPrice" class="col-md-2 control-label"></label>
                <div class="col-md-10">
                    <input id="minimumPrice" readonly />
                </div>
            </div>
            <div class="form-group" id="maxPrice">
                <label asp-for="Product.MaximumPrice" class="col-md-2 control-label"></label>
                <div class="col-md-10">
                    <input id="maximumPrice" readonly />
                </div>
            </div>
        </fieldset>
        <div class="form-group">
            <label asp-for="Product.TaxEnum" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <select asp-for="Product.TaxEnum" asp-items="Html.GetEnumSelectList<Product.TAX>()" class="form-control"></select>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="Product.StockManagement" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <select id="StockManagement" asp-for="Product.StockManagement" asp-items="Html.GetEnumSelectList<Product.StockType>()" class="form-control"></select>
                <span asp-validation-for="Product.StockManagement" class="text-danger" />
            </div>
        </div>

        <!--Submit-->
        @if (Model.IsNew)
        {
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" id="submit" value="Ajouter" class="btn btn-small btn-default" />
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" id="submit" value="Modifier" class="btn btn-small btn-default" />
                </div>
            </div>
        }
    </div>
</form>

<div>
    <a asp-action="Index" class="btn btn-small btn-default">Revenir aux produits</a>
</div>

@section Scripts {
    <script id="familiesTemplate" type="text/template">
        <div class="form-group">
            <label asp-for="Product.Familly" class="col-md-2 control-label">Famille</label>
            <div class="col-md-10">
                <select id="familiesDropDown" name="FamillyName">

                    <% _.forEach(productTypes, function(productType) { %>

                    <optgroup label="<%= productType.Name %>">

                        <% _.forEach(productType.ProductFamilly, function (productFamily) { %>

                        <option id="<%= productFamily.FamillyName %>" value="<%= productFamily.FamillyName %>" data-image="<%= productFamily.Image %>"
		      <% if (productFamily.FamillyName == currentFamilly) { %> selected="selected"  <% } %> >
		<%= productFamily.FamillyName %>
	      </option>

                        <% }); %>
                    </optgroup>
                    <% }); %>
                </select>
            </div>
        </div>
    </script>

    <script src="/js/manageProduct.js"></script>
    <script src="/js/formValidation.js"></script>
}
