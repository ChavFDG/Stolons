@using Stolons.ViewModels.Adherents
@model AdherentsStolonViewModel

    <div class="dropdown">
        <a class="dropdown-toggle btn btn-small btn-default" data-toggle="dropdown" href="#">
            Ajouter...
            <span class="caret"></span>
        </a>
        <ul class="dropdown-menu">
            <li><a href="#" onclick="showCreateAdherent(this);" data-id="@Model.Stolon.Id" data-edition="@((int)AdherentEdition.Consumer)" data-title="Ajout d'un nouveau consommateur">... un nouveau consommateur</a></li>
            <li><a href="#" onclick="showAddAdherent(this);" data-id="@Model.Stolon.Id" data-edition="@((int)AdherentEdition.Consumer)" data-title="Ajout un consommateur d'un autre Stolon">... un consommateur existant d'un autre Stolon</a></li>
        </ul>
    </div>

    <table class="table">
	<thead>
	    <tr>
		<th>
		    @Html.DisplayNameFor(item => item.AdherentsStolon.First().LocalId)
		</th>
		<th>
		    @Html.DisplayNameFor(item => item.AdherentsStolon.First().Adherent.AvatarFileName)
		</th>
		<th>
		    @Html.DisplayNameFor(item => item.AdherentsStolon.First().Adherent.Name)
		</th>
		<th>
		    @Html.DisplayNameFor(item => item.AdherentsStolon.First().Adherent.Surname)
		</th>
		<th>
		    @Html.DisplayNameFor(item => item.AdherentsStolon.First().Adherent.PhoneNumber)
		</th>
		<th>
		    @Html.DisplayNameFor(item => item.AdherentsStolon.First().Token)
		</th>
		<th>
		    @Html.DisplayNameFor(item => item.AdherentsStolon.First().SubscriptionPaid)
		</th>
		<th>
		    @Html.DisplayNameFor(item => item.AdherentsStolon.First().Enable)
		</th>
		<th>
		    @Html.DisplayNameFor(item => item.AdherentsStolon.First().Role)
		</th>
		<th></th>
	    </tr>
	</thead>
	<tbody>
    @foreach (var item in Model.AdherentsStolon.OrderBy(x=>x.LocalId))
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.LocalId)
                @if (item.Adherent.IsWebAdmin)
                {
                    <div class="warning-container">
                        <i class="glyphicon glyphicon-leaf"></i>
                        <div class="warning-informations right">
                            Ce membre est administrateur web    
                        </div>
                    </div>
                }
            </td>
            <td class="tdAvatarList">
                <div class="userListAvatar">
                    <img src="@Html.DisplayFor(modelItem => item.Adherent.AvatarFilePath)" class="responsiveImage circleAvatarDiv" />
                </div>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Adherent.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Adherent.Surname)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Adherent.PhoneNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Token)Ṩ
            </td>
            @if (item.SubscriptionPaid)
                {
                <td>
                    @Html.DisplayFor(modelItem => item.SubscriptionPaid)
                </td>
            }
            else
            {
                <td bgcolor="#ff8000">
                    @Html.DisplayFor(modelItem => item.SubscriptionPaid)
                </td>
            }
            @if (item.Enable)
                {
                <td>
                    @Html.DisplayFor(modelItem => item.Enable)
                </td>
            }
            else
            {
                <td bgcolor="#ff0000">
                    @Html.DisplayFor(modelItem => item.Enable)
                </td>
            }
            <td>
                @{
                    Html.RenderPartial("../Users/RoleActions", new AdherentStolonViewModel(Model.ActiveAdherentStolon, item));
                }
            </td>
            <td> 
                @{
                    Html.RenderPartial("../Users/AdherentActions", new AdherentStolonViewModel(Model.ActiveAdherentStolon, item));
                }
            </td>
        </tr>
	}
	</tbody>
</table>
