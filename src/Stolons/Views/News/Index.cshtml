@using System.Security.Claims
@using Stolons.Services
@using Stolons.Models.Users
@using Stolons.Models.Messages

@model IEnumerable<News>

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager


<h2>Gestion des nouvelles</h2>

@if (SignInManager.IsSignedIn(User))
{
    if (User.IsInRole(Configurations.Role.WebAdmin.ToString())
                        || User.IsInRole(Configurations.Role.StolonAdmin.ToString())
                        || User.IsInRole(Configurations.Role.Volunteer.ToString())
                        || User.IsInRole(Configurations.UserType.Producer.ToString()))
    {
        <p>
            <a asp-action="Create" class="btn btn-small btn-default">Ajouter une nouvelle</a>
        </p>
    }
}

<table class="table boxContainer">
    <tr>
        <th>
            Image
        </th>
        <th>
            Publié du / au
        </th>
        <th>
            Publié par
        </th>
        <th>
            Titre / message
        </th>
        <th>
        </th>
    </tr>

    @{
        List<Tuple<string, List<News>>> group = new List<Tuple<string, List<News>>>();
        group.Add(new Tuple<string, List<News>>("Nouvelles en attentes de publication", Model.Where(x => x.PublishStart > DateTime.Now).OrderByDescending(x => x.DateOfPublication).ToList()));
        group.Add(new Tuple<string, List<News>>("Nouvelles en cours de publication", Model.Where(x => x.PublishStart < DateTime.Now && x.PublishEnd > DateTime.Now).OrderByDescending(x => x.DateOfPublication).ToList()));
        group.Add(new Tuple<string, List<News>>("Nouvelles publiés dans le passé", Model.Where(x => x.PublishEnd < DateTime.Now).OrderByDescending(x => x.DateOfPublication).ToList()));

    }
    @foreach (var tuple in group)
    {
        <tbody class="boxContainer">
            @if (tuple.Item2.Any())
            {
                <tr><td colspan="4"><b>@tuple.Item1</b></td></tr>
                @foreach (var item in tuple.Item2)
                {
                    <tr @(item.IsHighlight ? "bgcolor=\"#609DD6\"" : "")>
                        <td class="tdImagePreviewNews">
                            @if (!String.IsNullOrWhiteSpace(item.ImageLink))
                            {
                                <img src="@Configurations.GetUrl(item.ImageLink)" class="newsPreviewThumnail responsiveImage">
                            }
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PublishStart)
                            <br />
                            @Html.DisplayFor(modelItem => item.PublishEnd)
                        </td>
                        <td>
                            <div class="nextToDiv">
                                @switch (item.PublishAs)
                                {
                                    case Stolons.Models.Messages.NewsPublishAs.Producer:
                                        <img class="avatar userNewsAvatar" src="@item.PublishBy.Adherent.AvatarFilePath" />
                                        break;
                                    case Stolons.Models.Messages.NewsPublishAs.Stolon:
                                        <img class="avatar userNewsAvatar" src="@item.PublishBy.Stolon.LogoFilePath" />
                                        break;
                                }
                            </div>
                            @switch (item.PublishAs)
                            {
                                case Stolons.Models.Messages.NewsPublishAs.Producer:
                                    <a asp-action="PartialDetail" asp-controller="Producers" asp-route-id="@item.PublishBy.Adherent.Id">@(item.PublishBy.Adherent.CompanyName)</a>
                                    break;
                                case Stolons.Models.Messages.NewsPublishAs.Stolon:
                                    @item.PublishBy.Stolon.Label
                                    break;
                            }
                        </td>
                        <td>
                            <b>@Html.DisplayFor(modelItem => item.Title)</b>
                            <br />
                            @Html.Raw(item.Content)
                        </td>

                        <td>
                            <div class="dropdown">
                                <a class="dropdown-toggle btn btn-small btn-default" data-toggle="dropdown" href="#">
                                    Actions
                                    <span class="caret"></span>
                                </a>
                                <ul class="dropdown-menu">
                                    @if (  User.Identity.Name == item.PublishBy.Adherent.Email
                                        || User.IsInRole(Configurations.Role.WebAdmin.ToString())
                                        || User.IsInRole(Configurations.Role.Volunteer.ToString())
                                        || User.IsInRole(Configurations.Role.StolonAdmin.ToString()))
                                    {
                                        <li>
                                            <a asp-action="Edit" asp-route-id="@item.Id">Modifier</a>
                                        </li>
                                    }
                                    @if (User.IsInRole(Configurations.Role.WebAdmin.ToString()) || User.IsInRole(Configurations.Role.StolonAdmin.ToString()) || UserManager.GetUserId(User) == item.PublishBy.Adherent.Email)
                                    {
                                        <li>
                                            <a asp-action="Delete" asp-route-id="@item.Id">Supprimer</a>
                                        </li>
                                    }
                                </ul>
                            </div>
                        </td>
                    </tr>
                }
            }
        </tbody>
    }
</table>