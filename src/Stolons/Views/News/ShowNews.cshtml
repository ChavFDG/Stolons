@using System.Security.Claims
@using Stolons.Services
@using Stolons.Models.Users

@model IEnumerable<Stolons.Models.Messages.News>

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager


@if (SignInManager.IsSignedIn(User))
{
    if (User.IsInRole(Configurations.Role.WebAdmin.ToString())
                        || User.IsInRole(Configurations.Role.StolonAdmin.ToString())
                        || User.IsInRole(Configurations.Role.Volunteer.ToString())
                        || User.IsInRole(Configurations.UserType.Producer.ToString()))
    {
        <p>
            <a asp-action="Create" asp-controller="News" class="btn btn-small btn-default">Ajouter une nouvelle</a>
        </p>
    }
}
<div>

    @if (!Model.Any())
    {
        <span>Aucune nouvelle pour l'instant</span>
    }
    else
    {
        @foreach (var item in Model.OrderBy(x => x.IsHighlight).OrderByDescending(x => x.PublishStart))
        {
            <div class="newsListItem clearfix @(item.IsHighlight? "newsListItemHighLight" : "") @(item.PublishEnd < DateTime.Now ? "oldNews" : "") ">
                <div class="newsListItemTitle">@Html.DisplayFor(modelItem => item.Title)</div>
                <div class="newsListItemContent clearfix">
                    @if (!String.IsNullOrWhiteSpace(item.ImageLink))
                    {
                        <div class="newsListItemContentImg">
                            <img src="@Configurations.GetUrl(item.ImageLink)" class="newsThumnail responsiveImage">
                        </div>
                    }
                    @Html.Raw(item.Content)
                </div>
                <div class="newsListItemBottom">
                    <div class="nextToDiv">
                        @switch (item.PublishAs)
                    {
                        case Stolons.Models.Messages.NewsPublishAs.Producer:
                                <img class="avatar userNewsAvatar" src="@item.User.AvatarFilePath" />
                                break;
                            case Stolons.Models.Messages.NewsPublishAs.Stolon:
                                <img class="avatar userNewsAvatar" src="@item.Stolon.LogoFilePath" />
                                break;
                        }
                    </div>
                    @switch (item.PublishAs)
                    {
                        case Stolons.Models.Messages.NewsPublishAs.Producer:
                            <a asp-action="PartialDetail" asp-controller="Producers" asp-route-id="@item.User.Id">@((item.User as Producer).CompanyName)</a>
                            break;
                        case Stolons.Models.Messages.NewsPublishAs.Stolon:
                            @item.Stolon.Label
                            break;
                    }
                    @item.DateOfPublication.ToString("le dd/MM/yyyy à HH:mm:ss")
                    @if (User.Identity.Name == item.User.Email
                                    || User.IsInRole(Configurations.Role.WebAdmin.ToString())
                                    || User.IsInRole(Configurations.Role.Volunteer.ToString())
                                    || User.IsInRole(Configurations.Role.StolonAdmin.ToString()))
                    {
                        <a asp-action="Edit" asp-controller="News" asp-route-id="@item.Id" class="btn btn-small btn-default">Modifier</a>
                    }
                    @if (User.IsInRole(Configurations.Role.WebAdmin.ToString()) || User.IsInRole(Configurations.Role.StolonAdmin.ToString()) || UserManager.GetUserId(User) == item.User.Email)
                    {
                        <a asp-action="Delete" asp-controller="News" asp-route-id="@item.Id" class="btn btn-small btn-default">Supprimer</a>
                    }
                </div>
            </div>
            @if (!item.IsHighlight)
            {
                <div class="newsListItemSeparator"></div>
            }
        }
        <a asp-action="ShowAllNews" asp-controller="Home" class="btn btn-small btn-default">Voir les anciennes nouvelles</a>
    }

</div>



