@using Stolons.ViewModels.Adherents
@model AdherentsStolonViewModel


<p>
    <a href="#" onclick="showCreateAdherent(this);" data-id="@Model.Stolon.Id" data-edition="@((int)AdherentEdition.Producer)" data-title="Ajout d'un nouveau producteur" class="btn btn-small btn-default">Ajouter un nouveau producteur</a>
</p>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(item => item.AdherentsStolon.First().LocalId)
        </th>
        <th>
            @Html.DisplayNameFor(item => item.AdherentsStolon.First().Adherent.CompanyName)
        </th>
        <th>
            @Html.DisplayNameFor(item => item.AdherentsStolon.First().Adherent.AvatarFileName)
        </th>
        <th>
            @Html.DisplayNameFor(item => item.AdherentsStolon.First().Adherent.Name)
        </th>
        <th>
            @Html.DisplayNameFor(item => item.AdherentsStolon.First().Adherent.Surname)
        </th>
        <th>
            @Html.DisplayNameFor(item => item.AdherentsStolon.First().Adherent.PhoneNumber)
        </th>
        <th>
            @Html.DisplayNameFor(item => item.AdherentsStolon.First().SubscriptionPaid)
        </th>
        <th>
            @Html.DisplayNameFor(item => item.AdherentsStolon.First().Enable)
        </th>
        <th>
            @Html.DisplayNameFor(item => item.AdherentsStolon.First().Role)
        </th>
        <th></th>
    </tr>
    
@foreach (var item in Model.AdherentsStolon.Where(x => x.IsProducer)) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.LocalId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Adherent.CompanyName)
        </td>
        <td class="tdAvatarList">
            <div class="userListAvatar">
                <img src="@Html.DisplayFor(modelItem => item.Adherent.AvatarFilePath)" class="responsiveImage circleAvatarDiv" />
            </div>
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Adherent.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Adherent.Surname)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Adherent.PhoneNumber)
        </td>
        @if (item.SubscriptionPaid)
        {
            <td>
                @Html.DisplayFor(modelItem => item.SubscriptionPaid)
            </td>
        }
        else
        {
            <td bgcolor="#ff8000">
                @Html.DisplayFor(modelItem => item.SubscriptionPaid)
            </td>
        }
        @if (item.Enable)
        {
            <td>
                @Html.DisplayFor(modelItem => item.Enable)
            </td>
        }
        else
        {
            <td bgcolor="#ff0000">
                @Html.DisplayFor(modelItem => item.Enable)
            </td>
        }
        <td>
            @Html.DisplayFor(modelItem => item.Role)
        </td>
        <td>
            <div class="dropdown">
                <a class="dropdown-toggle btn btn-small btn-default" data-toggle="dropdown" href="#">
                    Actions
                    <span class="caret"></span>
                </a>
                <ul class="dropdown-menu">
                    <li><a asp-action="ShowBills" asp-route-id="@item.Id" >Voir factures</a></li>
                    <li><a href="#" onclick="showDetailsAdherent(this);" data-id="@item.Id" data-title="@("Détail de " + item.Adherent.CompanyName)">Voir détail</a></li>
                    <li><a href="#" onclick="showEditAdherent(this);" data-id="@item.Id" data-title="@("Modification de " + item.Adherent.CompanyName)" >Modifier</a></li>
                    @if (item.SubscriptionPaid == false)
                    {
                        <li>
                            @Html.ActionLink(
                                   "Payer cotisation de : " + item.GetStringSubscriptionAmount(),
                                   "PaySubscription",
                                    new { id = item.Id },
                                    new { onclick = "return confirm('Valider le paiement de la cotisation de " + item.Adherent.Name + " pour un montant de : " + item.GetStringSubscriptionAmount() + "');" })
                        </li>
                    }
                    @if (Model.ActiveAdherentStolon.Authorized(Role.Admin))
                    {
                        @if (item.Enable == true)
                        {
                            <li>
                                @Html.ActionLink(
                                   "Désactiver le compte",
                                   "Disable",
                                    new { id = item.Id },
                                    new { onclick = "return confirm('Entrer la raison de la désactivation du compte pour " + item.Adherent.Name + "');" })
                            </li>
                        }
                        else
                        {
                            <li>
                                @Html.ActionLink(
                                   "Activer le compte",
                                   "Enable",
                                    new { id = item.Id },
                                    new { onclick = "return confirm('Confirmation de l'activation du compte de " + item.Adherent.Name + " ?');" })
                            </li>
                        }
                        <li><a asp-action="Delete" asp-route-id="@item.Id">Supprimer</a></li>
                    }
                </ul>
            </div>            
        </td>
    </tr>
}
</table>
