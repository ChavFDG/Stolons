@model Stolons.ViewModels.WeekBasketManagement.VmWeekBasketManagement
@using Stolons.Helpers
@using Stolons.Models
@using Stolons.Tools

@{
    ViewData["Title"] = "Gestion des paniers";
}


<h2>@ViewData["Title"]</h2>
@if (Configurations.Mode == ApplicationConfig.Modes.DeliveryAndStockUpdate)
{
    <h4>Les paniers de la semaine </h4>
        
    string fileName = DateTime.Now.Year + "_" + DateTime.Now.GetIso8601WeekOfYear();
    string downloadPath = Configurations.GetUrl(Configurations.StolonsBillsStockagePath) +"/"+ fileName + ".xlsx";
    <a href=@downloadPath>Télécharger les factures utilisateur de la semaine</a>
    
}


<h4>Facture à régler aux producteurs </h4>
@if (Model.ProducerBills.Any(x => x.State == BillState.Delivered))
{
    <table class="table">
        <tr>
            <th>
                Numéro
            </th>
            <th>
                Raison social
            </th>
            <th>
                Téléphone
            </th>
            <th>
                Etat
            </th>
            <th>
                Facture
            </th>
        </tr>
        @foreach (var item in Model.ProducerBills.Where(x => x.State == BillState.Delivered))
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Producer.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Producer.CompanyName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Producer.PhoneNumber)
                </td>
                <td>
                    @Html.ActionLink("Valider la payement de la facture",
                      "UpdateProducerBill",
                      new { billNumber = item.BillNumber },
                      new { onclick = " return UpdateBillConfirm(\"" + ("Confirmation de changement d'état de la facture de "  + item.Producer.CompanyName) + "\")" })
                </td>                
                <td>
                    @{
                        <a href="@Configurations.GetUrl(item)">@item.BillNumber</a>
                    }
                </td>
            </tr>
            }
    </table>
}
else
{
    <p>Aucune facture à régler</p>
}



<h4>Producteur ayant une commande à livrer cette semaine </h4>
@if (Model.ProducerBills.Any(x => x.State == BillState.Pending))
{
<table class="table">
    <tr>
        <th>
            Numéro
        </th>
        <th>
            Raison social
        </th>
        <th>
            Téléphone
        </th>
        <th>
            Etat
        </th>
        <th>
            Facture
        </th>
    </tr>
    @foreach (var item in Model.ProducerBills.Where(x => x.State == BillState.Pending))
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Producer.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Producer.CompanyName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Producer.PhoneNumber)
            </td>
            <td>
                @Html.ActionLink("Valider la livraison",
                      "UpdateProducerBill",
                      new { billNumber = item.BillNumber },
                      new { onclick = " return UpdateBillConfirm(\"" + ("Confirmation de changement d'état de la facture de " + item.Producer.CompanyName) + "\")" })
            </td>
            <td>
                @{
                    <a href="@Configurations.GetUrl(item)">@item.BillNumber</a>
                }
            </td>
        </tr>
    }
</table>
}
else
{
<p>Plus de command à livrer ou payer par / aux producteurs</p>
}

<h4>Adhérents ayant commandé un panier cette semaine</h4>
@if (Model.ConsumerBills.Any())
{
    <table class="table">
        <tr>
            <th>
                Numéro
            </th>
            <th>
                Nom
            </th>
            <th>
                Prénom
            </th>
            <th>
                Téléphone
            </th>
            <th>
                Etat
            </th>
            <th>
                Facture
            </th>
        </tr>
        @foreach (var item in Model.ConsumerBills)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Consumer.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Consumer.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Consumer.Surname)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Consumer.PhoneNumber)
                </td>
                <td>
                    @Html.ActionLink("Valider la récupération et le payement",
                                 "UpdateConsumerBill",
                                 new { billNumber = item.BillNumber },
                      new { onclick = " return UpdateBillConfirm(\"" + ("Confirmation de changement d'état de la facture de " + item.Consumer.Name) + "\")" })
                </td>
                <td>
                    @{
                        <a href="@Configurations.GetUrl(item)">@item.BillNumber</a>
                    }
                </td>
            </tr>
}
    </table>

}
else
{
    <p>Plus de panier cette semaine</p>
}


<script src="/js/confirmationDialog.js"></script>






