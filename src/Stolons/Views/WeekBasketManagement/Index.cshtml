@model Stolons.ViewModels.WeekBasketManagement.VmWeekBasketManagement
@using Stolons.Helpers
@using Stolons.Models
@using Stolons.Tools

@{
    ViewData["Title"] = "Gestion des paniers";
}


<h2>@ViewData["Title"]</h2>
@if (Configurations.Mode == ApplicationConfig.Modes.DeliveryAndStockUpdate && Model.WeekStolonsBill != null)
{
    <h4>Les paniers de la semaine </h4>
    <a href="@Configurations.GetUrl(Model.WeekStolonsBill.FilePath)" class="btn btn-small btn-default">Télécharger les factures utilisateur de la semaine</a>
    <p> </p>
    <a asp-action="ShowStolonsBill" asp-route-id="@Model.WeekStolonsBill.BillNumber" class="btn btn-small btn-default">Afficher les factures utilisateur de la semaine</a>
}

<div class="boxContainer">
<h4>Facture à régler aux producteurs </h4>
@if (Model.ProducerBills.Any(x => x.State == BillState.Delivered))
{
    <table class="table">
        <tr>
            <th>
                Numéro
            </th>
            <th>
                Raison social
            </th>
            <th>
                Téléphone
            </th>
            <th>
                Etat
            </th>
            <th>
                Facture
            </th>
        </tr>
        @foreach (var item in Model.ProducerBills.Where(x => x.State == BillState.Delivered))
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Producer.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Producer.CompanyName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Producer.PhoneNumber)
                </td>
                <td>
                    @Html.ActionLink(
                                   "Valider paiement de la facture",
                                  "UpdateProducerBill",
                                    new { billNumber = item.BillNumber },
                                    new { onclick = "return confirm('Confirmation du paiement de " + +item.ProducerAmount + " à " + item.Producer.CompanyName + "');" })
                 </td>
                <td>
                    @{
                        <a href="@Configurations.GetUrl(item)">@(item.ProducerAmount + "€" + " (" + item.FeeAmount + "€) - " + item.BillNumber)</a>
                    }
                </td>
            </tr>
    }
    </table>
}
else
{
    <p>Aucune facture à régler</p>
}

</div>

<div class="boxContainer">
<h4>Producteur ayant une commande à livrer cette semaine </h4>
@if (Model.ProducerBills.Any(x => x.State == BillState.Pending))
{
    <table class="table">
        <tr>
            <th>
                Numéro
            </th>
            <th>
                Raison social
            </th>
            <th>
                Téléphone
            </th>
            <th>
                Etat
            </th>
            <th>
                Facture
            </th>
        </tr>
        @foreach (var item in Model.ProducerBills.Where(x => x.State == BillState.Pending))
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Producer.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Producer.CompanyName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Producer.PhoneNumber)
                </td>
                <td>
                    @Html.ActionLink(
                                   "Valider la livraison",
                                  "UpdateProducerBill",
                                    new { billNumber = item.BillNumber },
                                    new { onclick = "return confirm('Confirmation de la livraison de " + item.Producer.CompanyName + "');" })
                </td>
                <td>
                    @{
                        <a href="@Configurations.GetUrl(item)">@(item.BillNumber)</a>
                    }
                </td>
            </tr>
    }
    </table>
}
else
{
    <p>Plus de command à livrer ou payer par / aux producteurs</p>
}
</div>

<div class="boxContainer">
<h4>Adhérents ayant commandé un panier cette semaine</h4>
@if (Model.ConsumerBills.Any())
{
    <table class="table">
        <tr>
            <th>
                Numéro
            </th>
            <th>
                Nom
            </th>
            <th>
                Prénom
            </th>
            <th>
                Téléphone
            </th>
            <th>
                Bogues
            </th>
            <th>
                Etat
            </th>
            <th>
                Facture
            </th>
        </tr>
        @foreach (var item in Model.ConsumerBills)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Consumer.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Consumer.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Consumer.Surname)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Consumer.PhoneNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Consumer.Token)𝞫
                </td>
                <td>
                    @Html.ActionLink(
                                   "Valider la récupération et le paiement",
                                  "UpdateConsumerBill",
                                    new { billNumber = item.BillNumber },
                                    new { onclick = "return confirm('Confirmation du paiement de la facture de " + item.Consumer.Name + " du "+ item.Amount +"€ ?');" })
                </td>
                <td>
                    @{
                        <a href="@Configurations.GetUrl(item)">@(item.Amount +"€ - " + item.BillNumber)</a>
                    }
                </td>
            </tr>
        }
    </table>
}
else
{
    <p>Plus de panier cette semaine</p>
}
</div>
